{
    "endpoint": "/create/projection",
    "type": "record",
    "name": "create_projection_request",
    "desc_name": "Create Projection",
    "on_prem_only": false,
    "is_host_manager_endpoint": false,
    "is_single_table_oriented": true,
    "short_doc": "Create a projection of an existing table",
    "doc": "Creates a new {projection}@{link /concepts/projections/} of
an existing table. A projection represents a subset of the columns (potentially
including derived columns) of a table.

For projection details and examples, see
{Projections}@{link /concepts/projections/}.  For limitations, see
{Projection Limitations and Cautions}@{link /concepts/projections/#limitations-and-cautions}.

{Window functions}@{link /concepts/window/}, which can perform
operations like moving averages, are available through this endpoint as well as
@{endpoint /get/records/bycolumn}.

A projection can be created with a different
{shard key}@{link /concepts/tables/#shard-keys} than the source table.
By specifying {shard_key}@{key of input options}, the projection will be sharded
according to the specified columns, regardless of how the source table is
sharded.  The source table can even be unsharded or replicated.

If @{input table_name} is empty, selection is performed against a single-row
virtual table.  This can be useful in executing temporal
({NOW()}@{link /concepts/expressions/#date-time-functions}), identity
({USER()}@{link /concepts/expressions/#user-security-functions}), or
constant-based functions
({GEODIST(-77.11, 38.88, -71.06, 42.36)}@{link /concepts/expressions/#scalar-functions}).",
    "fields": [
        {
            "name": "table_name",
            "type": "string",
            "doc": "Name of the existing table on which the projection is to be applied, in [schema_name.]table_name format, using standard {name resolution rules}@{link /concepts/tables/#table-name-resolution}.  An empty table name creates a projection from a single-row virtual table, where columns specified should be constants or constant expressions.",
            "value":
            {
                "is_input_table_name": true
            }
        },
        {
            "name": "projection_name",
            "type": "string",
            "doc": "Name of the projection to be created, in [schema_name.]table_name format, using standard {name resolution rules}@{link /concepts/tables/#table-name-resolution} and meeting {table naming criteria}@{link /concepts/tables/#table-naming-criteria}.",
            "value":
            {
                "is_output_table_name": true
            }
        },
        {
            "name": "column_names",
            "type":
            {
                "type": "array",
                "items": "string"
            },
            "doc": "List of columns from @{input table_name} to be included in the projection. Can include derived columns. Can be specified as aliased via the syntax 'column_name as alias'.",
            "value": {}
        },
        {
            "name": "options",
            "type":
            {
                "type": "map",
                "values": "string"
            },
            "doc": "Optional parameters.",
            "value":
            {
                "default": {},
                "valid_keys" :
                {
                    "collection_name" :
                    {
                        "doc": "[DEPRECATED--please specify the containing schema for the projection as part of @{input projection_name} and use @{endpoint /create/schema} to create the schema if non-existent]  Name of a schema for the projection. If the schema is non-existent, it will be automatically created.",
                        "value" :
                        {
                            "default": ""
                        }
                    },
                    "expression" :
                    {
                        "doc": "An optional filter {expression}@{link /concepts/expressions/} to be applied to the source table prior to the projection.",
                        "value" :
                        {
                            "default": ""
                        }
                    },
                    "is_replicated" :
                    {
                        "doc": "If {true}@{choice of input.key options.is_replicated} then the projection will be replicated even if the source table is not.",
                        "value" :
                        {
                            "default" : "false",
                            "valid_choices" :
                            {
                                "true" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                },
                                "false" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                }
                            }
                        }
                    },
                    "limit" :
                    {
                        "doc": "The number of records to keep.",
                        "value" :
                        {
                            "default": ""
                        }
                    },
                    "order_by" :
                    {
                        "doc": "Comma-separated list of the columns to be sorted by; e.g. 'timestamp asc, x desc'.  The columns specified must be present in @{input column_names}.  If any alias is given for any column name, the alias must be used, rather than the original column name.",
                        "value" :
                        {
                            "default": ""
                        }
                    },
                    "materialize_on_gpu" :
                    {
                        "doc": "No longer used.  See {Resource Management Concepts}@{link /rm/concepts/} for information about how resources are managed.",
                        "value" :
                        {
                            "internal_option": true
                        }
                    },
                    "chunk_size" :
                    {
                        "doc"  : "Indicates the number of records per chunk to be used for this projection.",
                        "value" : {}
                    },
                    "chunk_column_max_memory" :
                    {
                        "doc"  : "Indicates the target maximum data size for each column in a chunk to be used for this projection.",
                        "value" : {}
                    },
                    "create_indexes" :
                    {
                        "doc"  : "Comma-separated list of columns on which to create indexes on the projection.  The columns specified must be present in @{input column_names}.  If any alias is given for any column name, the alias must be used, rather than the original column name.",
                        "value" : {}
                    },
                    "dont_set_avro_info" :
                    {
                        "doc"  : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true
                        }
                    },
                    "ttl" :
                    {
                        "doc" : "Sets the {TTL}@{link /concepts/ttl/} of the projection specified in @{input projection_name}.",
                        "value" : {}
                    },
                    "shard_key" :
                    {
                        "doc": "Comma-separated list of the columns to be sharded on; e.g. 'column1, column2'.  The columns specified must be present in @{input column_names}.  If any alias is given for any column name, the alias must be used, rather than the original column name.",
                        "value" :
                        {
                            "default": ""
                        }
                    },
                    "persist" :
                    {
                        "doc" : "If {true}@{choice of input.key options.persist}, then the projection specified in @{input projection_name} will be persisted and will not expire unless a {ttl}@{key of input options} is specified.   If {false}@{choice of input.key options.persist}, then the projection will be an in-memory table and will expire unless a {ttl}@{key of input options} is specified otherwise.",
                        "value" :
                        {
                            "default" : "false",
                            "valid_choices" :
                            {
                                "true" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                },
                                "false" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                }
                            }
                        }
                    },
                    "preserve_dict_encoding" :
                    {
                        "doc" : "If {true}@{choice of input.key options.preserve_dict_encoding}, then columns that were dict encoded in the source table will be dict encoded in the projection.",
                        "value" :
                        {
                            "default" : "true",
                            "valid_choices" :
                            {
                                "true" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                },
                                "false" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                }
                            }
                        }
                    },
                    "refresh" :
                    {
                        "doc"  : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true
                        }
                    },
                    "retain_chunks" :
                    {
                        "doc"  : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true,
                            "default" : "true",
                            "valid_choices" :
                            {
                                "true" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                },
                                "false" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                }
                            }
                        }
                    },
                    "retain_partitions" :
                    {
                        "doc"  : "Determines whether the created projection will retain the partitioning scheme from the source table.",
                        "value" :
                        {
                            "default" : "false",
                            "valid_choices" :
                            {
                                "true" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                },
                                "false" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                }
                            }
                        }
                    },
                    "view_id" :
                    {
                        "doc"  : "ID of view of which this projection is a member",
                        "value" :
                        {
                            "default": ""
                        }
                    },
                    "internal_security_token" :
                    {
                        "doc" : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true
                        }
                    },
                    "view_definition" :
                    {
                        "doc" : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true
                        }
                    },
                    "create_explain" :
                    {
                        "doc"  : "<DEVELOPER>",
                        "value" :
                        {
                            "default" : "false",
                            "internal_option": true
                        }
                    },
                    "no_count" :
                    {
                        "doc"  : "return a count of 0 for the join table for logging and for show_table. optimization needed for large overlapped equi-join stencils",
                        "value" :
                        {
                            "default": "false",
                            "internal_option": true
                        }
                    },
                    "show_filters" :
                    {
                        "doc"  : "<DEVELOPER>",
                        "value" :
                        {
                            "default" : "false",
                            "internal_option": true
                        }
                    },
                    "chunk_skipping" :
                    {
                        "doc"  : "<DEVELOPER>",
                        "value" :
                        {
                            "default" : "true",
                            "internal_option": true
                        }
                    },
                    "in_initialize_materialized_view":
                    {
                        "doc"  :  "option set internally to indicate to worker the join table is part of a persisted materialized view being created at startup - in combination with throw_error:on_worker_restart will cause worker to throw an error",
                        "value" :
                        {
                            "internal_option": true,
                            "default": ""
                        }
                    },
                    "throw_error":
                    {
                        "doc"  :  "The option can be set to throw errors on the worker or the head node and the error can be thrown either during the initial creation of the table, during initialization of a view member at restart or during view refresh.",
                        "value" :
                        {
                            "internal_option": true,
                            "valid_choices" :
                            {
                                "on_worker_creation":
                                {
                                    "doc": "throw an error from the worker when the table is initially created",
                                    "value" : {}
                                },
                                "on_worker_refresh" :
                                {
                                    "doc": "throw an error from the worker when refreshing the table - only applies to materialized view members",
                                    "value" : {}
                                },
                                "on_worker_restart" :
                                {
                                    "doc": "throw an error from the worker when initializing the view member at restart.  only applies to materialized view members.",
                                    "value" : {}
                                },
                                "on_head_node_creation":
                                {
                                    "doc": "throw an error from the head node when the table is initially created",
                                    "value" : {}
                                },
                                "on_head_node_refresh" :
                                {
                                    "doc": "throw an error from the head node when refreshing the table - only applies to materialized view members",
                                    "value" : {}
                                },
                                "on_head_node_restart" :
                                {
                                    "doc": "throw an error from the head node when initializing the view member at restart.  only applies to materialized view members.",
                                    "value" : {}
                                }
                            }
                        }
                    },
                    "retain_latent_view_members":
                    {
                        "doc" : "<DEVELOPER>",
                        "value" :
                        {
                            "default" : "false",
                            "internal_option": true
                        }
                    }
                }
            }
        }
    ]
}
