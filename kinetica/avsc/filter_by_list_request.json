{
    "endpoint": "/filter/bylist",
    "type": "record",
    "name": "filter_by_list_request",
    "desc_name": "Filter by List",
    "on_prem_only": false,
    "is_host_manager_endpoint": false,
    "is_single_table_oriented": true,
    "short_doc": "Filter a dataset for records with specific column values",
    "doc": "Calculates which records from a table have values in the given list
for the corresponding column. The operation is synchronous, meaning that a
response will not be returned until all the objects are fully available. The
response payload provides the count of the resulting set. A new resultant set
(view) which satisfies the input filter specification is also created if a
@{input view_name} is passed in as part of the request.

For example, if a type definition has the columns 'x' and 'y', then a filter by
list query with the column map
{\"x\":[\"10.1\", \"2.3\"], \"y\":[\"0.0\", \"-31.5\", \"42.0\"]} will return
the count of all data points whose x and y values match both in the respective
x- and y-lists, e.g., \"x = 10.1 and y = 0.0\", \"x = 2.3 and y = -31.5\", etc.
However, a record with \"x = 10.1 and y = -31.5\" or \"x = 2.3 and y = 0.0\"
would not be returned because the values in the given lists do not correspond.",

    "fields": [
        {
            "name": "table_name",
            "type": "string",
            "doc": "Name of the table to filter, in [schema_name.]table_name format, using standard {name resolution rules}@{link /concepts/tables/#table-name-resolution}.  This may be the name of a table or a view (when chaining queries).",
            "value":
            {
                "is_input_table_name": true
            }
        },
        {
            "name": "view_name",
            "type": "string",
            "doc": "If provided, then this will be the name of the view containing the results, in [schema_name.]view_name format, using standard {name resolution rules}@{link /concepts/tables/#table-name-resolution} and meeting {table naming criteria}@{link /concepts/tables/#table-naming-criteria}.  Must not be an already existing table or view.",
            "value":
            {
                "is_output_table_name": true,
                "default" : ""
            }
        },
        {
            "name": "column_values_map",
            "type": {
                "type": "map",
                "values": {
                    "type": "array",
                    "items": "string"
                }
            },
            "doc": "List of values for the corresponding column in the table",
            "value": { "managed": "values" }
        },
        {
            "name": "options",
            "type": {
                "type" : "map",
                "values" : "string"
            },
            "doc": "Optional parameters.",
            "value":
            {
                "default" : {},
                "valid_keys" :
                {
                    "collection_name" :
                    {
                        "doc": "[DEPRECATED--please specify the containing schema for the view as part of @{input view_name} and use @{endpoint /create/schema} to create the schema if non-existent]  Name of a schema for the newly created view. If the schema provided is non-existent, it will be automatically created.",
                        "value" : {}
                    },
                    "filter_mode" :
                    {
                        "doc"  : "String indicating the filter mode, either 'in_list' or 'not_in_list'.",
                        "value" :
                        {
                            "default" : "in_list",
                            "valid_choices" :
                            {
                                "in_list" :
                                {
                                    "doc" : "The filter will match all items that are in the provided list(s).",
                                    "value" : {}
                                },
                                "not_in_list" :
                                {
                                    "doc" : "The filter will match all items that are not in the provided list(s).",
                                    "value" : {}
                                }
                            }
                        }
                    },
                    "refresh": 
                    {
                        "doc": "<DEVELOPER>",
                        "value": { "internal_option": true }
                    }
                }
            }
        }
    ]
}
