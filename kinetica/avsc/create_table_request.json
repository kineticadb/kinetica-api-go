{
    "endpoint": "/create/table",
    "type": "record",
    "name": "create_table_request",
    "desc_name": "Create Table",
    "on_prem_only": false,
    "is_host_manager_endpoint": false,
    "is_single_table_oriented": false,
    "short_doc": "Create a new table",
    "doc": "Creates a new table. If a new table is being created,
the type of the table is given by @{input type_id}, which must be the ID of
a currently registered type (i.e. one created via @{endpoint /create/type}).

A table may optionally be designated to use a
{replicated}@{link /concepts/tables/#replication} distribution scheme,
or be assigned: {foreign keys}@{link /concepts/tables/#foreign-keys} to
other tables, a {partitioning}@{link /concepts/tables/#partitioning}
scheme, and/or a {tier strategy}@{link /rm/concepts/#tier-strategies}.",
    "fields": [
        {
            "name": "table_name",
            "type": "string",
            "doc": "Name of the table to be created, in [schema_name.]table_name format, using standard {name resolution rules}@{link /concepts/tables/#table-name-resolution} and meeting {table naming criteria}@{link /concepts/tables/#table-naming-criteria}. Error for requests with existing table of the same name and type ID may be suppressed by using the {no_error_if_exists}@{key of input options} option.",
            "value": {}
        },
        {
            "name": "type_id",
            "type": "string",
            "doc": "ID of a currently registered type. All objects added to the newly created table will be of this type.",
            "value": {}
        },
        {
            "name": "options",
            "type":
            {
                "type": "map",
                "values": "string"
            },
            "doc": "Optional parameters.",
            "value":
            {
                "default": {},
                "valid_keys" :
                {
                    "no_error_if_exists" :
                    {
                        "doc" : "If {true}@{choice of input.key options.no_error_if_exists}, prevents an error from occurring if the table already exists and is of the given type.  If a table with the same ID but a different type exists, it is still an error.",
                        "value" :
                        {
                            "valid_choices" :
                            {
                                "true": { "doc": "", "value": {} },
                                "false": { "doc": "", "value": {} }
                            },
                            "default" : "false"
                        }
                    },
                    "collection_name" :
                    {
                        "doc": "[DEPRECATED--please specify the containing schema as part of @{input table_name} and use @{endpoint /create/schema} to create the schema if non-existent]  Name of a schema which is to contain the newly created table. If the schema is non-existent, it will be automatically created.",
                        "value" : {}
                    },
                    "is_collection" :
                    {
                        "doc" : "[DEPRECATED--please use @{endpoint /create/schema} to create a schema instead]  Indicates whether to create a schema instead of a table.",
                        "value" :
                        {
                            "valid_choices" :
                            {
                                "true": { "doc": "", "value": {} },
                                "false": { "doc": "", "value": {} }
                            },
                            "default" : "false"
                        }
                    },
                    "disallow_homogeneous_tables" :
                    {
                        "type": "boolean",
                        "doc": "No longer supported; value will be ignored.",
                        "value":
                        {
                            "default": "false",
                            "valid_choices" :
                            {
                                "true": { "doc": "", "value": {} },
                                "false": { "doc": "", "value": {} }
                            }
                        }
                    },
                    "is_replicated" :
                    {
                        "doc" : "Affects the {distribution scheme}@{link /concepts/tables/#distribution} for the table's data.  If {true}@{choice of input.key options.is_replicated} and the given type has no explicit {shard key}@{link /concepts/tables/#shard-key} defined, the table will be {replicated}@{link /concepts/tables/#replication}.  If {false}@{choice of input.key options.is_replicated}, the table will be {sharded}@{link /concepts/tables/#sharding} according to the shard key specified in the given @{input type_id}, or {randomly sharded}@{link /concepts/tables/#random-sharding}, if no shard key is specified.  Note that a type containing a shard key cannot be used to create a replicated table.",
                        "value":
                        {
                            "default": "false",
                            "valid_choices" :
                            {
                                "true": { "doc": "", "value": {} },
                                "false": { "doc": "", "value": {} }
                            }
                        }
                    },
                    "foreign_keys" :
                    {
                        "doc" : "Semicolon-separated list of {foreign keys}@{link /concepts/tables/#foreign-keys}, of the format '(source_column_name [, ...]) references target_table_name(primary_key_column_name [, ...]) [as foreign_key_name]'.",
                        "value": {}
                    },
                    "foreign_shard_key" :
                    {
                        "doc" : "Foreign shard key of the format 'source_column references shard_by_column from target_table(primary_key_column)'.",
                        "value": {}
                    },
                    "partition_type" :
                    {
                        "doc" : "{Partitioning}@{link /concepts/tables/#partitioning} scheme to use.",
                        "value":
                        {
                            "valid_choices" :
                            {
                                "RANGE" :
                                {
                                    "doc" : "Use {range partitioning}@{link /concepts/tables/#partitioning-by-range}.",
                                    "value" : {}
                                },
                                "INTERVAL" :
                                {
                                    "doc" : "Use {interval partitioning}@{link /concepts/tables/#partitioning-by-interval}.",
                                    "value" : {}
                                },
                                "LIST" :
                                {
                                    "doc" : "Use {list partitioning}@{link /concepts/tables/#partitioning-by-list}.",
                                    "value" : {}
                                },
                                "HASH" :
                                {
                                    "doc" : "Use {hash partitioning}@{link /concepts/tables/#partitioning-by-hash}.",
                                    "value" : {}
                                },
                                "SERIES" :
                                {
                                    "doc" : "Use {series partitioning}@{link /concepts/tables/#partitioning-by-series}.",
                                    "value" : {}
                                }
                            }
                        }
                    },
                    "partition_keys" :
                    {
                        "doc" : "Comma-separated list of partition keys, which are the columns or column expressions by which records will be assigned to partitions defined by {partition_definitions}@{key of input options}.",
                        "value": {}
                    },
                    "partition_definitions" :
                    {
                        "doc" : "Comma-separated list of partition definitions, whose format depends on the choice of {partition_type}@{key of input options}.  See {range partitioning}@{link /concepts/tables/#partitioning-by-range}, {interval partitioning}@{link /concepts/tables/#partitioning-by-interval}, {list partitioning}@{link /concepts/tables/#partitioning-by-list}, {hash partitioning}@{link /concepts/tables/#partitioning-by-hash}, or {series partitioning}@{link /concepts/tables/#partitioning-by-series} for example formats.",
                        "value": {}
                    },
                    "is_automatic_partition" :
                    {
                        "doc" : "If {true}@{choice of input.key options.is_automatic_partition}, a new partition will be created for values which don't fall into an existing partition.  Currently only supported for {list partitions}@{link /concepts/tables/#partitioning-by-list}.",
                        "value" :
                        {
                            "valid_choices" :
                            {
                                "true" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                },
                                "false" :
                                {
                                    "doc" : "",
                                    "value" : {}
                                }
                            },
                            "default" : "false"
                        }
                    },
                    "ttl" :
                    {
                        "doc" : "Sets the {TTL}@{link /concepts/ttl/} of the table specified in @{input table_name}.",
                        "value" : {}
                    },
                    "chunk_size" :
                    {
                        "doc"  : "Indicates the number of records per chunk to be used for this table.",
                        "value" : {}
                    },
                    "chunk_column_max_memory" :
                    {
                        "doc": "Indicates the target maximum data size for each column in a chunk to be used for this table.",
                        "value": {}
                    },
                    "is_result_table" :
                    {
                        "doc" : "Indicates whether the table is a {memory-only table}@{link /concepts/tables_memory_only/}. A result table cannot contain columns with store_only or text_search {data-handling}@{link /concepts/types/#data-handling} or that are {non-charN strings}@{link /concepts/types/#primitive-types}, and it will not be retained if the server is restarted.",
                        "value" :
                        {
                            "default": "false",
                            "valid_choices" :
                            {
                                "true" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "false" :
                                {
                                    "doc": "",
                                    "value": {}
                                }
                            }
                        }
                    },
                    "strategy_definition":
                    {
                        "doc" : "The {tier strategy}@{link /rm/concepts/#tier-strategies} for the table and its columns.",
                        "value": {}
                    },
                    "avro_type" :
                    {
                        "doc" : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true,
                            "default": "is_table",
                            "valid_choices" :
                            {
                                "is_table" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_join" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_view" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_other_view" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_projection" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_union" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_unique" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_unpivot" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_merge" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_group_by" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_area" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_area_geometry" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_box_geometry" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_box" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_geometry" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_list" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_radius" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_radius_geometry" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_range" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_series" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_series_values" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_string" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_table" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_filter_by_value" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_update_records_by_series" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_create_view" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_external_table" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_create_sql_proc" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_state" :
                                {
                                    "doc": "",
                                    "value": {}
                                },
                                "is_delta" :
                                {
                                    "doc": "",
                                    "value": {}
                                }
                            }
                        }
                    },
                    "avro_json":
                    {
                        "doc" : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true
                        }
                    },
                    "view_id":
                    {
                        "doc" : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true
                        }
                    },
                    "internal_token" :
                    {
                        "doc" : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": true
                        }
                    },
                    "is_virtual_union" :
                    {
                        "doc" : "<DEVELOPER>",
                        "value" :
                        {
                            "internal_option": false
                        }
                    }
                }
            }
        }
    ]
}
